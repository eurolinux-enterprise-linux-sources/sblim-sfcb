diff -up sblim-sfcb-1.3.11/brokerOs.c.orig sblim-sfcb-1.3.11/brokerOs.c
--- sblim-sfcb-1.3.11/brokerOs.c.orig	2008-05-20 16:50:22.000000000 +0200
+++ sblim-sfcb-1.3.11/brokerOs.c	2014-07-01 13:57:58.490331477 +0200
@@ -242,3 +242,49 @@ CMPIBrokerExtFT brokerExt_FT = {
 };
 
 CMPIBrokerExtFT *CMPI_BrokerExt_Ftab = &brokerExt_FT;
+
+
+/*
+ * -----------------------------------------------
+ * CMPIBrokerMemFT -memory specific CIMOM routines
+ * ------------------------------------------------
+*/
+extern void *markHeap();
+extern void releaseHeap(void *);
+
+/* The following two are wrappers for markHeap() and releaseHeap()
+ * in support.c which allows for provider calls via broker->mft functions
+*/
+static CMPIGcStat *mark(const CMPIBroker *mb, CMPIStatus *rc)
+{
+   return((CMPIGcStat *)markHeap());
+}
+
+static CMPIStatus release(const CMPIBroker *mb, const CMPIGcStat *gc)
+{
+   CMPIStatus st = {CMPI_RC_OK, NULL};
+   releaseHeap((void *)gc);
+   return(st);
+}
+
+
+CMPIBrokerMemFT brokerMem_FT = {
+   CMPICurrentVersion,
+   mark,
+   release,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL,
+   NULL
+};
+
+CMPIBrokerMemFT *CMPI_BrokerMem_Ftab = &brokerMem_FT;
+
diff -up sblim-sfcb-1.3.11/brokerUpc.c.orig sblim-sfcb-1.3.11/brokerUpc.c
--- sblim-sfcb-1.3.11/brokerUpc.c.orig	2011-02-12 00:08:53.000000000 +0100
+++ sblim-sfcb-1.3.11/brokerUpc.c	2014-07-01 13:58:32.827461506 +0200
@@ -121,6 +121,7 @@ static CMPIStatus deliverIndication(cons
    NativeSelectExp *se=activFilters;
    
    while (se) {
+     CMPIGcStat *hc = (void *)(mb->mft->mark(mb, &st));
      /* Check for matching FROM class */
      for (x=0; x<se->qs->fcNext; x++) {
        if (CMClassPathIsA(mb, indop, se->qs->fClasses[x], &st)) {
@@ -128,6 +129,7 @@ static CMPIStatus deliverIndication(cons
 	 break;
        }
      }
+     mb->mft->release(mb, hc);
      if (classMatch && se->exp.ft->evaluate(&se->exp,ind,&st)) {
      /*apply a propertyfilter in case the query is not "SELECT * FROM ..." */
         if(se->qs->spNames && se->qs->spNames[0]) {
@@ -145,6 +147,8 @@ static CMPIStatus deliverIndication(cons
 #endif		     
 		 );
          CBInvokeMethod(mb,ctx,op,"_deliver",in,NULL,&st);
+         CMRelease(op);
+         CMRelease(in);
       }
       se=se->next;
    }   
@@ -1164,13 +1168,14 @@ static CMPIBrokerFT request_FT = {
 CMPIBrokerFT *RequestFT = &request_FT;
 
 extern CMPIBrokerExtFT brokerExt_FT;
+extern CMPIBrokerMemFT brokerMem_FT;
 
 static CMPIBroker _broker = {
    NULL,
    &request_FT,
    &native_brokerEncFT,
    &brokerExt_FT,
-   NULL
+   &brokerMem_FT
 };
 
 CMPIBroker *Broker = &_broker;
diff -up sblim-sfcb-1.3.11/native.h.orig sblim-sfcb-1.3.11/native.h
--- sblim-sfcb-1.3.11/native.h.orig	2007-10-02 11:02:11.000000000 +0200
+++ sblim-sfcb-1.3.11/native.h	2014-07-01 13:57:58.491331481 +0200
@@ -105,6 +105,7 @@ void native_release_CMPIContext(CMPICont
 CMPIContext *native_clone_CMPIContext(const CMPIContext *ctx);
 
 extern CMPIBrokerExtFT *CMPI_BrokerExt_Ftab;
+extern CMPIBrokerMemFT *CMPI_BrokerMem_Ftab;
 
 MsgSegment setObjectPathMsgSegment(const CMPIObjectPath * op);
 CMPIInstance *relocateSerializedInstance(void *area);
